name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  frontend:
    runs-on: ubuntu-latest
    steps:
      - name: (Github) Checkout Code
        uses: actions/checkout@v4

      - name: (Node.js) Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '21'

      - name: (Frontend) Install Dependencies
        working-directory: ML.Frontend/
        run: npm install

      - name: (BuildX) Setup Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: (Docker) Build MovieList Frontend Docker Image
        working-directory: ML.Frontend/
        run: docker build . -t marijndemul16/ml.frontend:latest

      - name: (Docker) Log Into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: (Docker) Push The MovieList Frontend Image To Docker Hub
        run: docker push marijndemul16/ml.frontend

  backend:
    runs-on: ubuntu-latest
    steps:
      - name: (Github) Checkout Code
        uses: actions/checkout@v4

      - name: (.NET) Setup
        uses: actions/setup-dotnet@main
        with:
          dotnet-version: '8.0.x'

      - name: (.NET) Restore Backend Dependencies
        run: dotnet restore ML.Backend/ML/Backend.sln

      - name: (.NET) Run Unit Tests
        run: dotnet test --no-build --verbosity normal ML.Backend/ML.Backend.sln

      - name: (.NET) Build MovieList Backend
        run: dotnet build --no-restore ML.Backend/ML.Backend.sln

      - name: (BuildX) Setup Docker BuildX
        uses: docker/setup-buildx-action@v2

      - name: (Docker) Build MovieList Backend Docker Image
        working-directory: ML.Backend/
        run: docker build . -t marijndemul16/ml.backend:latest

      - name: (Docker) Log Into Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: (Docker) Push The MovieList Backend Image To Docker Hub
        run: docker push marijndemul16/ml.backend
          
  cd:
    needs: [frontend, backend]
    runs-on: ubuntu-latest

    steps:
      - name: (Github) Checkout Code
        uses: actions/checkout@v4

      - name: (SSH) Set up SSH keys
        uses: webfactory/ssh-agent@v0.5.3
        with:
          ssh-private-key: ${{ secrets.SSH_PRIVATE_KEY }}

      - name: (Docker) SSH into VPS and Deploy Production Environment
        run: |
          ssh -o StrictHostKeyChecking=no root@45.140.142.168 '
            export DOCKER_BUILDKIT=1
            export DOCKER_CLI_EXPERIMENTAL=enabled

            cd /root/docker/movielist

            docker compose down

            docker compose pull
            
            docker image prune -f
            
            docker compose up -d
          '
        env:
          DOCKER_BUILDKIT: 1
          DOCKER_CLI_EXPERIMENTAL: enabled